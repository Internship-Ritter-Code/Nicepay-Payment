<?php

namespace App\Http\Controllers;
use Illuminate\Http\Request;
use App\Library\NicepayLib;

class RequestVA extends Controller
{
    /**
     * Handle the incoming request.
     *
     * @param \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     */
    public function __invoke(Request $request)
    {
        $nicepay = new NicepayLib();
        function generateReference()
        {
            $micro_date = microtime();
            $date_array = explode(" ", $micro_date);
            $date = date("YmdHis", $date_array[1]);
            $date_array[0] = preg_replace('/[^\p{L}\p{N}\s]/u', '', $date_array[0]);
            return "Ref" . $date . $date_array[0] . rand(100, 999);
        }

        $payMethod = $request->input('payMethod');
        $referenceNo = $request->input('referenceNo');
        if (isset($payMethod) && $payMethod == '02') {

            // Populate Mandatory parameters to send
            $nicepay->set('payMethod', '02');
            $nicepay->set('currency', 'IDR');

            if (!isset($referenceNo) || $referenceNo == null) {
                $nicepay->set('referenceNo', generateReference()); // Invoice Number or Reference Number Generated by merchant
            } else {
                $nicepay->set('referenceNo', $referenceNo);
            }

            $nicepay->set('amt', $request->input('amt')); // Total gross amount
            $nicepay->set('description', 'Payment of Invoice No ' . $nicepay->get('referenceNo')); // Transaction description

            $nicepay->set('billingNm', 'John Doe'); // Customer name
            $nicepay->set('billingPhone', '082111111111'); // Customer phone number
            $nicepay->set('billingEmail', 'john@example.com'); // Customer Email
            $nicepay->set('billingAddr', 'Jl. Jend. Sudirman No. 28');
            $nicepay->set('billingCity', 'Jakarta Pusat');
            $nicepay->set('billingState', 'DKI Jakarta');
            $nicepay->set('billingPostCd', '10210');
            $nicepay->set('billingCountry', 'Indonesia');

            $nicepay->set('deliveryNm', 'John Doe'); // Delivery name
            $nicepay->set('deliveryPhone', '082111111111');
            $nicepay->set('deliveryAddr', 'Jl. Jend. Sudirman No. 28');
            $nicepay->set('deliveryCity', 'Jakarta Pusat');
            $nicepay->set('deliveryState', 'DKI Jakarta');
            $nicepay->set('deliveryPostCd', '10210');
            $nicepay->set('deliveryCountry', 'Indonesia');

            $timeStamp = date('Ymd').date('His');
            $nicepay->set('timeStamp', $timeStamp);
            $nicepay->set('reqDt', date('Ymd'));
            $nicepay->set('reqTm', date('His'));

            $nicepay->set('bankCd', $_POST['bankCd']); // Virtual Account (VA)
            $nicepay->set('vacctValidDt', $_POST['vacctValidDt']); // Virtual Account (VA)
            $nicepay->set('vacctValidTm', $_POST['vacctValidTm']);

            // Send Data
            $response = $nicepay->requestVA();

            // Response from NICEPAY
            if (isset($response->resultCd) && $response->resultCd == "0000") {

                return redirect()->route('result', 'tXid='.
                    $response->tXid.'&referenceNo='.$response->referenceNo.
                    '&vacctNo='.$response->vacctNo.
                    '&amt='.$response->amt.
                    '&description='.$response->description.
                    '&billingNm='.$response->billingNm.
                    '&resultCd='.$response->resultCd.
                    '&resultMsg='.$response->resultMsg
                );

            } 
            elseif(isset($response->resultCd)) {
                return redirect()->route('otherError', (array) $response);
            } else {
                $request->session()->flash('msg', 'Connection Timeout. Please Try Again!');
            }
        }
    }
}
